/* 
    Collection of classes structures to achieve flexible layouts
    with CSS table algorytm

    Author  : Simone Rescio
    eMail   : info@simonerescio.it
    website : http://simonerescio.it
*/

/* Allows content of a table-cell element to be positioned relative to the cell */
/* First child of the table-cell must be the following, and all contents goes inside of it */
.tbcRelative {
    display: table;
    height: 100%;
    position: relative;
    width: 100%;
    
    #win-desktop > & {
        display: block;
        left: 0;
        overflow: hidden;
        position: absolute;
    }
    
    &:after {
        clear: both;
        content: '.';
        display: block;
        opacity: 0;
        font-size: 0px;
    }
}

/* Content on single line without affecting parent and sibilings sizes */
/* Html structure must follow the selectors nesting */
.oneLineFlex {
    display: table;
    width: 100%;
    
    .oneLineContainer {
        display: table-cell;
        width: inherit;
        
        .oneLineContent {
            display: block;
            overflow: hidden;
            position: absolute;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: inherit;
            
            .oneLineText {
                display: inline-block;
                height: 1.5em;
                margin: -0.5em 0 0 0;
                overflow: hidden;
                position: absolute;
                text-overflow: ellipsis;
                top: 50%;
                width: 100%;
            }
        }
    }
}

/* Allow vertical content to expand with fixed sibiling on top and bottom */
.tbFill {
    display: table;
    height: 100%;
    width: 100%;
    
    .tbHeader {
        display: table-header-group;
        height: 1px;
    }
    .tbRow {
        display: table-row;
        height: 100%;
    }
    .tbFooter {
        display: table-footer-group;
        height: 1px;
    }
}

// Three rows with elastic middle content
.Layout-container {
    display: table;
    
    .layout-top {
        background-color: orange;
        display: table-header-group;
        height: 1%;
    }

    .layout-middle {
        background-color: azure;
        display: inherit;
        height: 100%;
        width: 100%;
        position: relative;
        
        .outWrap {
            display: block;
            height: 100%;
            position : absolute;
            overflow: auto;
            -webkit-overflow-scrolling: touch;
            width:100%;
            
            .inWrap {
                height: 100%;
            }
        }
    }

    .layout-bottom {
        background-color: grey;
        display: table-footer-group;
        height: 1%;
    }
}

.ie8 {
    .Layout-container {
        .layout-middle {
            display: table-cell;
            height : auto;
        }
    }
}

.ie9 {
    .Layout-container {
       
        .layout-middle {
            display: table-cell;
        }
    }
}

@media screen and (-webkit-min-device-pixel-ratio:0) {
    .Layout-container {

        .layout-middle {
            
            .outWrap {
                position: static;
            }
        }
    }
}

